name: Build Multi Arch Image
on:
  push:
    branches:
    - release-*
    paths-ignore:
    - 'docs/**'
    - '**.md'
env:
  REGISTRY: etcdnecx
  RELEASE_TAG: ecx-release-1.9.2
  GO_VERSION: '1.17.5'

jobs:
  build-x86:
    name: Build x86
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: |
          echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Check out kube-ovn
        run: |
          git clone -b $RELEASE_TAG --depth=1 https://github.com/EdgeCloudX/kube-ovn.git
          cp dist/images/Dockerfile kube-ovn/dist/images/Dockerfile -f
          cp dist/images/Makefile kube-ovn/Makefile -f

      - name: Unit test
        run: |
          cd kube-ovn
          go install github.com/onsi/ginkgo/ginkgo@latest
          make ut

      - name: Build
        run: |
          cd kube-ovn
          go mod tidy
          go install github.com/securego/gosec/cmd/gosec@latest
          make release
          make tar

      - name: Push
        if: ${{ contains(github.ref, 'release') }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMMIT: ${{ github.sha }}
        run: |
          cat VERSION
          TAG=$(cat VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker images
          docker tag $REGISTRY/kube-ovn:$TAG $REGISTRY/kube-ovn:$TAG-x86
          docker push $REGISTRY/kube-ovn:$TAG-x86

  build-arm64:
    name: Build arm64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: |
          echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Check out kube-ovn
        run: |
          git clone -b $RELEASE_TAG --depth=1 https://github.com/EdgeCloudX/kube-ovn.git
          cp dist/images/Dockerfile kube-ovn/dist/images/Dockerfile -f
          cp dist/images/Makefile kube-ovn/Makefile -f

      - name: Build
        run: |
          cd kube-ovn
          go mod tidy
          go install github.com/securego/gosec/cmd/gosec@latest
          make release-arm || make release-arm

      - name: Push
        if: ${{ contains(github.ref, 'release') }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMMIT: ${{ github.sha }}
        run: |
          cat VERSION
          TAG=$(cat VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker images
          docker tag $REGISTRY/kube-ovn:$TAG $REGISTRY/kube-ovn:$TAG-arm
          docker push $REGISTRY/kube-ovn:$TAG-arm

  push-multi-arch:
    name: Push multi arch images
    runs-on: ubuntu-20.04
    needs:
      - build-x86
      - build-arm64
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2

      - name: Push
        if: ${{ contains(github.ref, 'release') }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMMIT: ${{ github.sha }}
        run: |
          cat VERSION
          TAG=$(cat VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker pull $REGISTR/kube-ovn:$TAG-x86
          docker pull $REGISTR/kube-ovn:$TAG-arm
          docker manifest create $REGISTR/kube-ovn:$TAG $REGISTR/kube-ovn:$TAG-x86 $REGISTR/kube-ovn:$TAG-arm
          docker manifest push $REGISTR/kube-ovn:$TAG